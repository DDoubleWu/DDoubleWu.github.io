{"meta":{"title":"DDoubleWu的博客","subtitle":"吴会玩","description":"致力于成为程序猿的菜鸟","author":"DDoubleWu","url":"https://ddoublewu.github.io"},"pages":[{"title":"Hello WOrld!","date":"2018-10-04T01:22:14.000Z","updated":"2018-10-04T01:22:14.120Z","comments":true,"path":"Hello-WOrld/index.html","permalink":"https://ddoublewu.github.io/Hello-WOrld/index.html","excerpt":"","text":""},{"title":"about","date":"2018-10-05T10:40:10.000Z","updated":"2018-10-05T10:42:49.652Z","comments":false,"path":"about/index.html","permalink":"https://ddoublewu.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-10-05T10:39:54.000Z","updated":"2018-10-05T10:42:33.144Z","comments":false,"path":"categories/index.html","permalink":"https://ddoublewu.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-10-07T02:01:13.000Z","updated":"2018-10-07T02:01:13.947Z","comments":true,"path":"tags/index-1.html","permalink":"https://ddoublewu.github.io/tags/index-1.html","excerpt":"","text":""},{"title":"tags","date":"2018-10-05T10:39:35.000Z","updated":"2018-10-05T10:42:17.024Z","comments":false,"path":"tags/index.html","permalink":"https://ddoublewu.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"C++数组","slug":"C-数组","date":"2018-10-07T01:59:35.000Z","updated":"2018-10-10T13:52:15.203Z","comments":true,"path":"2018/10/07/C-数组/","link":"","permalink":"https://ddoublewu.github.io/2018/10/07/C-数组/","excerpt":"","text":"创建数组数组是一种数据格式，能够存储多个同类型的数值，每个值都存储在一个独立的数组元素中，计算机在内存中依次存储数组的各个元素。要创建数组，可使用声明语句，数组声明应指出一下三点： 存储在每个元素中的值的类型 数组名 数组中的元素数 简单变量声明使用数组声明来创建数组时，将采用静态联编，即数组长度在编译时设置该种声明数组的通用格式如下：1typename arrayName[arraySize]; 表达式arraySize指定元素数目，可以是整形常数（如10）或const值，也可以是常量表达式（如 8*sizeof(int)），即arraySize不能是变量。ex：1int days[10]; 数组的初始化只有在定义数组的时候才可初始化，不能将一个数组赋给另一个数组：123int months[5] = &#123;1,2,3,4,5&#125;; //okayint months[5]; //okayint *p = years[5]; //okay 初始化数组时，提供的值可以少于数组的元素数目，如果只对数组的一部分进行初始化，则编译器把其他元素设为0:12int days[10] = &#123;1,2&#125;; //前两个元素为0int cards[5] = &#123;0&#125;; //全部为0 若初始化数组时arraySize为空，C++编译器将计算元素个数。ex:1short things[] = &#123;1,3,5,8&#125;; //编译器将使其things数组包含4个元素 C++11数组的初始化方法C++11中的列表初始化增加了一些功能1.初始化数组时，可以省略等号（=)1short things[4] &#123;1,2,3,4&#125;; 2.可在大括号中不包含任何东西，将所有元素设置为01float cards[4] &#123;&#125;; 3.列表初始化禁止缩窄转换12long plifs[] = &#123;25,92,3.0&#125;; //not allowedchar tlifs[] = &#123;'h','j',112&#125;; //allowed 第一条不能通过编译，因为浮点型转化为整型时缩窄操作第二条语句可以通过编译，因为虽然112是一个int值，但它在char变量的取值范围内(-128~127) 使用new创建动态数组采用new[]运算符创建数组时，将采用动态联编，即在运行时为数组分配空间，其长度也将在运行时设置。 初始化数组在C++中，只需要将数组的元素类型和元素数目告诉new即可ex:1int *p = new int [10]; //创建一个包含10个int元素的数组 new运算符返回第一个元素的地址当程序使用完new分配的内存块时，应使用delete来释放它们。对于new创建的数组，应使用以下delete来释放：1delete [] p; //方括号表示释放整个数组 如果new一个实体分配内存，则应使用delete(没有方括号)来释放 数组的使用对于第一个元素，可以使用p[0],第二个元素为p[1]ex:1234double *p = new double [2];p[0] = 1.0;p[1] = 2.0;delete [] p; 模板类vector创建vector初始化模板类vector也是一种动态数组，可以在末尾添加新数据，还可以在中间添加新数据，基本上是使用new创建动态数组的替代品，要创建vector模板对象，可使用通常的表示法来指出要使用的类型，还可用初始化参数来指出需要多少矢量ex:123456#include &lt;vector&gt;using namespace std;vector&lt;int&gt; ratings(5);int n;cin&gt;&gt;n;vector&lt;double&gt; scores(n); 由于运算符[]被重载，因此创建vector对象后，可以使用通常的数组表示法来访问每个元素:123retings[0] = 9;for (int i=0;i&lt;n;i++) cout&lt;&lt;scores[i]&lt;&lt;endl; vector基本用法添加元素采用 push_back()可以将元素添加到末尾ex:1234vector&lt;double&gt; scores;double temp;while (cin&gt;&gt;temp &amp;&amp; temp &gt;=0) scores.push_back(temp); 这样每次循环都会给scores对象添加一个元素，在编写或运程序时，无需了解元素的数目。只要能够取得足够的内存，程序就可以增加scores的长度 删除元素采用erase()方法删除矢量中给定区间的元素，他接受两个迭代器参数，这些参数定义了要删除的区间。第一个迭代器指向区间的起始处，第二个迭代器位于区间终止处的后一个位置。ex:`c++scores.erase(scores.begin(),scores.begin()+2) //删除begin()到begin()+1的元素","categories":[{"name":"C++","slug":"C","permalink":"https://ddoublewu.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://ddoublewu.github.io/tags/C/"},{"name":"基础","slug":"基础","permalink":"https://ddoublewu.github.io/tags/基础/"}]}]}